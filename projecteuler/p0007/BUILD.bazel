load("@build_bazel_rules_nodejs//:index.bzl", "nodejs_binary")
load("@npm//@bazel/jasmine:index.bzl", "jasmine_node_test")
load("@npm//@bazel/typescript:index.bzl", "ts_library")

ts_library(
    name = "10001st_prime",
    srcs = ["10001st_prime.ts"],
)

ts_library(
    name = "10001st_prime_test_lib",
    srcs = ["10001st_prime_test.ts"],
    deps = [
        ":10001st_prime",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "10001st_prime_test",
    deps = [":10001st_prime_test_lib"],
)

ts_library(
    name = "10001st_prime_stress_test_lib",
    srcs = ["1001st_prime_stress_test.ts"],
    deps = [
        ":10001st_prime",
        "@npm//@types/jasmine",
    ],
)

jasmine_node_test(
    name = "10001st_prime_stress_test",
    tags = ["manual"],
    deps = [":10001st_prime_stress_test_lib"],
)

ts_library(
    name = "steps_lib",
    srcs = ["steps.ts"],
    deps = ["@npm//immutable"],
)

nodejs_binary(
    name = "steps",
    data = [":steps_lib"],
    entry_point = ":steps.ts",
)

ts_library(
    name = "benchmark_lib",
    srcs = ["benchmark.ts"],
    deps = [
        ":10001st_prime",
        "@npm//benny",
    ],
)

# To run this and generate a profile do
# $ bazel build projecteuler/p0007:benchmark && NODE_ENV=production bazel-bin/projecteuler/p0007/benchmark.sh
# $ node --prof-process <the isloate file> > processed.txt
nodejs_binary(
    name = "benchmark",
    data = [":benchmark_lib"],
    entry_point = ":benchmark.ts",
    templated_args = ["--node_options=--prof"],
)
